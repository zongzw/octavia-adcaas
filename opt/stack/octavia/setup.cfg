[metadata]
name = octavia
summary = OpenStack Octavia Scalable Load Balancer as a Service
description-file =
    README.rst
author = OpenStack
author-email = openstack-discuss@lists.openstack.org
home-page = https://docs.openstack.org/octavia/latest/
python-requires = >=3.6
classifier =
    Development Status :: 5 - Production/Stable
    Environment :: OpenStack
    Intended Audience :: Developers
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[files]
packages =
    octavia
data_files =
    etc/octavia =
        etc/octavia.conf
    share/octavia =
        LICENSE
        README.rst
    share/octavia/diskimage-create =
        diskimage-create/diskimage-create.sh
        diskimage-create/image-tests.sh
        diskimage-create/README.rst
        diskimage-create/requirements.txt
        diskimage-create/test-requirements.txt
        diskimage-create/tox.ini
        diskimage-create/version.txt

[entry_points]
wsgi_scripts =
    octavia-wsgi = octavia.api.app:setup_app
console_scripts =
    octavia-api = octavia.cmd.api:main
    octavia-worker = octavia.cmd.octavia_worker:main
    octavia-health-manager = octavia.cmd.health_manager:main
    octavia-housekeeping = octavia.cmd.house_keeping:main
    octavia-db-manage = octavia.db.migration.cli:main
    octavia-driver-agent = octavia.cmd.driver_agent:main
    amphora-agent = octavia.cmd.agent:main
    haproxy-vrrp-check = octavia.cmd.haproxy_vrrp_check:main
    octavia-status = octavia.cmd.status:main
octavia.api.drivers =
    noop_driver = octavia.api.drivers.noop_driver.driver:NoopProviderDriver
    noop_driver-alt = octavia.api.drivers.noop_driver.driver:NoopProviderDriver
    amphora = octavia.api.drivers.amphora_driver.v1.driver:AmphoraProviderDriver
    # octavia is an alias for backward compatibility
    octavia = octavia.api.drivers.amphora_driver.v1.driver:AmphoraProviderDriver
    amphorav2 = octavia.api.drivers.amphora_driver.v2.driver:AmphoraProviderDriver
octavia.amphora.drivers =
    amphora_noop_driver = octavia.amphorae.drivers.noop_driver.driver:NoopAmphoraLoadBalancerDriver
    amphora_haproxy_rest_driver = octavia.amphorae.drivers.haproxy.rest_api_driver:HaproxyAmphoraLoadBalancerDriver
octavia.amphora.health_update_drivers =
    health_logger = octavia.controller.healthmanager.health_drivers.update_logging:HealthUpdateLogger
    health_db = octavia.controller.healthmanager.health_drivers.update_db:UpdateHealthDb
octavia.amphora.stats_update_drivers =
    stats_logger = octavia.controller.healthmanager.health_drivers.update_logging:StatsUpdateLogger
    stats_db = octavia.controller.healthmanager.health_drivers.update_db:UpdateStatsDb
octavia.amphora.udp_api_server =
    keepalived_lvs = octavia.amphorae.backends.agent.api_server.keepalivedlvs:KeepalivedLvs
octavia.compute.drivers =
    compute_noop_driver = octavia.compute.drivers.noop_driver.driver:NoopComputeDriver
    compute_nova_driver = octavia.compute.drivers.nova_driver:VirtualMachineManager
octavia.driver_agent.provider_agents =
    noop_agent = octavia.api.drivers.noop_driver.agent:noop_provider_agent
octavia.network.drivers =
    network_noop_driver = octavia.network.drivers.noop_driver.driver:NoopNetworkDriver
    allowed_address_pairs_driver = octavia.network.drivers.neutron.allowed_address_pairs:AllowedAddressPairsDriver
    containers_driver = octavia.network.drivers.neutron.containers:ContainersDriver
octavia.volume.drivers =
    volume_noop_driver = octavia.volume.drivers.noop_driver.driver:NoopVolumeDriver
    volume_cinder_driver = octavia.volume.drivers.cinder_driver:VolumeManager
octavia.distributor.drivers =
    distributor_noop_driver = octavia.distributor.drivers.noop_driver.driver:NoopDistributorDriver
    single_VIP_amphora = octavia.distributor.drivers.single_VIP_amphora.driver:SingleVIPAmpDistributorDriver
octavia.cert_generator =
    local_cert_generator = octavia.certificates.generator.local:LocalCertGenerator
octavia.cert_manager =
    local_cert_manager = octavia.certificates.manager.local:LocalCertManager
    barbican_cert_manager = octavia.certificates.manager.barbican:BarbicanCertManager
    castellan_cert_manager = octavia.certificates.manager.castellan_mgr:CastellanCertManager
octavia.barbican_auth =
    barbican_acl_auth = octavia.certificates.common.auth.barbican_acl:BarbicanACLAuth
octavia.plugins =
    hot_plug_plugin = octavia.controller.worker.v1.controller_worker:ControllerWorker
octavia.worker.jobboard_driver =
    redis_taskflow_driver = octavia.controller.worker.v2.taskflow_jobboard_driver:RedisTaskFlowDriver
    zookeeper_taskflow_driver = octavia.controller.worker.v2.taskflow_jobboard_driver:ZookeeperTaskFlowDriver
oslo.config.opts =
    octavia = octavia.opts:list_opts
oslo.policy.policies =
    octavia = octavia.policies:list_rules
oslo.policy.enforcer =
    octavia = octavia.common.policy:get_no_context_enforcer
oslo.middleware.healthcheck =
    octavia_db_check = octavia.api.healthcheck.healthcheck_plugins:OctaviaDBHealthcheck

[compile_catalog]
directory = octavia/locale
domain = octavia

[update_catalog]
domain = octavia
output_dir = octavia/locale
input_file = octavia/locale/octavia.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = octavia/locale/octavia.pot
